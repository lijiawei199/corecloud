/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (2.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.bananalab.snow.api;

import com.bananalab.snow.api.model.BaseVO;
import com.bananalab.snow.api.model.Fieldlist;
import com.bananalab.snow.api.model.Fieldusers;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-09T14:17:07.921+08:00")

@Api(value = "fields", description = "the fields API")
public interface FieldsApi {

    @ApiOperation(value = "", nickname = "addstar", notes = "点击收藏", response = BaseVO.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/fields/addstar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> addstar(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "region") @Valid @RequestParam(value = "fieldId", required = false) String fieldId);


    @ApiOperation(value = "", nickname = "cancelstar", notes = "取消收藏", response = BaseVO.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/fields/cancelstar",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> cancelstar(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "region") @Valid @RequestParam(value = "fieldId", required = false) String fieldId);


    @ApiOperation(value = "", nickname = "fieldStar", notes = "用户收藏的滑雪场", response = Fieldlist.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Fieldlist.class) })
    @RequestMapping(value = "/fields/star",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fieldlist> fieldStar(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "latitude", required = true) Double latitude,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "longitude", required = true) Double longitude,@ApiParam(value = "region") @Valid @RequestParam(value = "region", required = false) String region);


    @ApiOperation(value = "", nickname = "fields", notes = "滑雪场", response = Fieldlist.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Fieldlist.class) })
    @RequestMapping(value = "/fields",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fieldlist> fields(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "region", required = true) String region,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "latitude", required = true) Double latitude,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "longitude", required = true) Double longitude);


    @ApiOperation(value = "", nickname = "fieldusers", notes = "滑雪场用户", response = Fieldusers.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Fieldusers.class) })
    @RequestMapping(value = "/fields/users",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fieldusers> fieldusers(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "fieldId") @Valid @RequestParam(value = "fieldId", required = false) Integer fieldId);


    @ApiOperation(value = "", nickname = "searchfield", notes = "搜索滑雪场", response = Fieldlist.class, tags={ "滑雪场", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Fieldlist.class) })
    @RequestMapping(value = "/fields/search",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Fieldlist> searchfield(@ApiParam(value = "region") @Valid @RequestParam(value = "fieldName", required = false) String fieldName);

}
