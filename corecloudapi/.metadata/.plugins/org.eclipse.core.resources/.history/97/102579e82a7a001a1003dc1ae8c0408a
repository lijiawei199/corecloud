package com.bananalab.snow.api;

import com.bananalab.snow.api.model.BaseVO;
import com.bananalab.snow.api.model.UserVO;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.constraints.*;
import javax.validation.Valid;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-09T14:17:07.921+08:00")

@Controller
@RequestMapping("${openapi.Qpk API.base-path:/snow}")
public class RegistApiController implements RegistApi {

    private final RegistApiDelegate delegate;

    public RegistApiController(@org.springframework.beans.factory.annotation.Autowired(required = false) RegistApiDelegate delegate) {
        this.delegate = delegate;
    }

    public ResponseEntity<BaseVO> snowinfo(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "user"  )  @Valid @RequestBody UserVO user) {
        return delegate.snowinfo(token, user);
    }

    public ResponseEntity<BaseVO> wxRegist(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "code") @Valid @RequestParam(value = "code", required = false) String code) {
        return delegate.wxRegist(token, code);
    }

    public ResponseEntity<BaseVO> wxinfo(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "user"  )  @Valid @RequestBody UserVO user) {
        return delegate.wxinfo(token, user);
    }

}
