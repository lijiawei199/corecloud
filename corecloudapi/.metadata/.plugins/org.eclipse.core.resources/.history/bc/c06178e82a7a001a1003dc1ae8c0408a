/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (2.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.bananalab.snow.api;

import com.bananalab.snow.api.model.BaseVO;
import com.bananalab.snow.api.model.OrderVO;
import com.bananalab.snow.api.model.Orderdetail;
import com.bananalab.snow.api.model.Orderlist;
import com.bananalab.snow.api.model.WxpayVO;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-04-09T14:17:07.921+08:00")

@Api(value = "order", description = "the order API")
public interface OrderApi {

    @ApiOperation(value = "", nickname = "beginstudy", notes = "开始学习", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/beginstudy",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> beginstudy(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId);


    @ApiOperation(value = "", nickname = "cancel", notes = "教练取消", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/cancel",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> cancel(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId,@ApiParam(value = "reason") @Valid @RequestParam(value = "reason", required = false) String reason);


    @ApiOperation(value = "", nickname = "confirm", notes = "教练确认", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/confirm",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> confirm(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId);


    @ApiOperation(value = "", nickname = "endstudy", notes = "确认学习完成", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/endstudy",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> endstudy(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId);


    @ApiOperation(value = "", nickname = "halllist", notes = "大厅订单列表", response = Orderlist.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Orderlist.class) })
    @RequestMapping(value = "/order/halllist",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Orderlist> halllist(@ApiParam(value = "0全部 单板 双板  这里传中文") @Valid @RequestParam(value = "skiType", required = false) String skiType,@ApiParam(value = "0升序 1降序") @Valid @RequestParam(value = "money", required = false) String money,@ApiParam(value = "0全部 1男 2女") @Valid @RequestParam(value = "gender", required = false) String gender,@ApiParam(value = "雪场Id") @Valid @RequestParam(value = "fieldId", required = false) Integer fieldId);


    @ApiOperation(value = "", nickname = "orderdetail", notes = "订单详情", response = Orderdetail.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Orderdetail.class) })
    @RequestMapping(value = "/order/detail",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Orderdetail> orderdetail(@NotNull @ApiParam(value = "orderId", required = true) @Valid @RequestParam(value = "orderId", required = true) String orderId);


    @ApiOperation(value = "", nickname = "orderlist", notes = "订单详情", response = Orderlist.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = Orderlist.class) })
    @RequestMapping(value = "/order/orderlist",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Orderlist> orderlist(@ApiParam(value = "stuOpenId") @Valid @RequestParam(value = "stuOpenId", required = false) String stuOpenId,@ApiParam(value = "coachOpenId") @Valid @RequestParam(value = "coachOpenId", required = false) String coachOpenId,@ApiParam(value = "状态 -1 全部 0未付款 1已付款（等待接单） 2 已接单 3 待确认 4 已完成 5 退款申请中 6退款完成 7 已评价 8 已取消") @Valid @RequestParam(value = "state", required = false) String state);


    @ApiOperation(value = "", nickname = "orderwxpay", notes = "微信支付", response = WxpayVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = WxpayVO.class) })
    @RequestMapping(value = "/order/wxpay",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<WxpayVO> orderwxpay(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "") @Valid @RequestParam(value = "orderId", required = false) String orderId);


    @ApiOperation(value = "", nickname = "prepare", notes = "订单录入", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/prepare",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<BaseVO> prepare(@ApiParam(value = "order"  )  @Valid @RequestBody OrderVO order);


    @ApiOperation(value = "", nickname = "receipt", notes = "接单", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/receipt",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> receipt(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId,@ApiParam(value = "coachTel") @Valid @RequestParam(value = "coachTel", required = false) String coachTel);


    @ApiOperation(value = "", nickname = "refund", notes = "退款", response = BaseVO.class, tags={ "订单", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "success", response = BaseVO.class) })
    @RequestMapping(value = "/order/refund",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<BaseVO> refund(@ApiParam(value = "" ,required=true) @RequestHeader(value="token", required=true) String token,@ApiParam(value = "orderId") @Valid @RequestParam(value = "orderId", required = false) String orderId,@ApiParam(value = "reason") @Valid @RequestParam(value = "reason", required = false) String reason);

}
