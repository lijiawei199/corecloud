---
name: "Java Client"
genTemplateId: "com.modelsolv.reprezen.gentemplates.swagger.codegen.JavaClientCodegen"
relativeOutputDir: generated
prerequisites: null
primarySource: 
  path: "../../../models/app.yaml"
namedSources: null 
# The parameters object contains variables that are processed directly by the GenTemplate.
parameters: 
  # Sort method arguments to place required parameters before optional parameters.
  sortParamsByRequiredFlag: null
  
  # Whether to ensure parameter names are unique in an operation (rename parameters that are not).
  ensureUniqueParams: null
  
  # boolean, toggles whether unicode identifiers are allowed in names or not, default is false
  allowUnicodeIdentifiers: null
  
  # package for generated models
  modelPackage: null
  
  # package for generated api classes
  apiPackage: null
  
  # root package for generated code
  invokerPackage: null
  
  # groupId in generated pom.xml
  groupId: null
  
  # artifactId in generated pom.xml
  artifactId: null
  
  # artifact version in generated pom.xml
  artifactVersion: null
  
  # artifact URL in generated pom.xml
  artifactUrl: null
  
  # artifact description in generated pom.xml
  artifactDescription: null
  
  # SCM connection in generated pom.xml
  scmConnection: null
  
  # SCM developer connection in generated pom.xml
  scmDeveloperConnection: null
  
  # SCM URL in generated pom.xml
  scmUrl: null
  
  # developer name in generated pom.xml
  developerName: null
  
  # developer email in generated pom.xml
  developerEmail: null
  
  # developer organization in generated pom.xml
  developerOrganization: null
  
  # developer organization URL in generated pom.xml
  developerOrganizationUrl: null
  
  # The name of the license
  licenseName: null
  
  # The URL of the license
  licenseUrl: null
  
  # source folder for generated code
  sourceFolder: null
  
  # prefix for generated code members and local variables
  localVariablePrefix: null
  
  # boolean - toggle "implements Serializable" for generated models
  serializableModel: null
  
  # Treat BigDecimal values as Strings to avoid precision loss.
  bigDecimalAsString: null
  
  # whether to use fully qualified name for classes under java.util. This option only works for Java API client
  fullJavaUtil: null
  
  # hides the timestamp when files were generated
  hideGenerationTimestamp: null
  
  # Option. Date library to use
  dateLibrary: null
  
  # Whether to use the RxJava adapter with the retrofit2 library.
  useRxJava: null
  
  # Whether to generate models for Android that implement Parcelable with the okhttp-gson library.
  parcelableModel: null
  
  # Use Play! 2.4 Async HTTP client (Play WS API)
  usePlay24WS: null
  
  # Whether to support Java6 with the Jersey1 library.
  supportJava6: null
  
  # Use BeanValidation API annotations
  useBeanValidation: null
  
  # Perform BeanValidation
  performBeanValidation: null
  
  # library template (sub-template) to use
  library: null
  
  # Contents of swagger codegen configuration file.
  # This is the file that would be passed with --config option on swagger codegen command line.
  # The JSON contents of that file should be the value of this parameter.
  # This parameter need not be used. If it is absent, all string-valued parameters are collected into
  # a map that is then passed to the swagger codegen module. If a map is provided here, then string-valued
  # parameters are still copied in, overriding like-named values appearing in the map.
  swaggerCodegenConfig: null
  
  # System properties to set, as in the -D option of swagger codegen command line.
  # Each property should be a json object with a name/value pair for each property.
  # Example: for '-Dmodels -Dapis=User,Pets' use the following:
  # value:
  #   models: ''
  #   apis: Users,Pets
  swaggerCodegenSystemProperties: null
